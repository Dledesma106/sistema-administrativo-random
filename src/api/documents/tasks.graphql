query tasks(
    $assigned: [String!]
    $business: [String!]
    $city: [String!]
    $status: [TaskStatus!]
    $client: [String!]
    $taskType: [TaskType!]
    $startDate: DateTime
    $endDate: DateTime
    $skip: Int
    $take: Int
    $orderBy: String
    $orderDirection: String
) {
    tasks(
        assigned: $assigned
        business: $business
        status: $status
        city: $city
        client: $client
        taskType: $taskType
        startDate: $startDate
        endDate: $endDate
        orderBy: $orderBy
        orderDirection: $orderDirection
        skip: $skip
        take: $take
    ) {
        id
        useMaterials
        taskNumber
        createdAt
        startedAt
        closedAt
        description
        participants
        preventive {
            id
            frequency
        }
        business {
            id
            name
        }
        businessName
        clientName
        branch {
            id
            number
            name
            city {
                id
                name
                province {
                    id
                    name
                }
            }
            client {
                id
                name
            }
        }
        assigned {
            id
            fullName
        }
        expenses {
            amount
        }
        taskType
        status
    }
    tasksCount(
        assigned: $assigned
        business: $business
        city: $city
        status: $status
        client: $client
        taskType: $taskType
        startDate: $startDate
        endDate: $endDate
    )
}

query GetTask($id: String!) {
    taskById(id: $id) {
        id
        useMaterials
        taskNumber
        startedAt
        createdAt
        closedAt
        description
        actNumber
        observations
        administrativeNotes
        attachmentFiles {
            url
            mimeType
            filename
            key
            size
            urlExpire
        }
        clientName
        businessName
        preventive {
            id
            frequency
        }
        business {
            id
            name
        }
        images {
            id
            url
        }
        branch {
            id
            number
            name
            city {
                id
                name
                province {
                    id
                    name
                }
            }
            client {
                id
                name
            }
        }
        participants
        assigned {
            id
            firstName
            lastName
            fullName
            email
        }
        expenses {
            id
            expenseNumber
            amount
            paySource
            paySourceBank
            expenseType
            observations
            createdAt
            images {
                id
                url
                urlExpire
                key
            }
            files {
                id
                url
                key
                mimeType
                filename
            }
            installments
            expenseDate
            status
            registeredBy {
                fullName
            }
            doneBy
        }
        taskType
        status
        movitecTicket
    }
}

mutation createTask($input: TaskInput!) {
    createTask(input: $input) {
        task {
            id
        }
        success
        message
    }
}

mutation updateTask($id: String!, $input: TaskInput!) {
    updateTask(id: $id, input: $input) {
        task {
            id
        }
        success
        message
    }
}

mutation deleteTask($id: String!) {
    deleteTask(id: $id) {
        task {
            id
        }
        success
        message
    }
}

mutation updateTaskStatus($id: String!, $status: TaskStatus!) {
    updateTaskStatus(id: $id, status: $status) {
        task {
            id
            status
        }
        success
        message
    }
}

mutation GenerateApprovedTasksReport($startDate: DateTime!, $endDate: DateTime!) {
    generateApprovedTasksReport(startDate: $startDate, endDate: $endDate)
}

query GetTaskPhotosKeys($startDate: DateTime!, $endDate: DateTime!, $businessId: String) {
    getTaskPhotosWithInfo(
        startDate: $startDate
        endDate: $endDate
        businessId: $businessId
    )
}

mutation DownloadTaskPhotos(
    $startDate: DateTime!
    $endDate: DateTime!
    $businessId: String
) {
    downloadTaskPhotos(
        startDate: $startDate
        endDate: $endDate
        businessId: $businessId
    ) {
        success
        url
        message
    }
}

mutation UpdateTaskAdministrative($id: String!, $input: UpdateTaskAdministrativeInput!) {
    updateTaskAdministrative(id: $id, input: $input) {
        success
        message
        task {
            id
            administrativeNotes
            attachmentFiles {
                url
                mimeType
                filename
                key
                size
                urlExpire
            }
        }
    }
}

mutation RemoveTaskAttachment($id: String!, $fileKey: String!) {
    removeTaskAttachment(id: $id, fileKey: $fileKey) {
        success
        message
        task {
            id
            attachmentFiles {
                key
                filename
                url
                mimeType
                size
                urlExpire
            }
        }
    }
}
