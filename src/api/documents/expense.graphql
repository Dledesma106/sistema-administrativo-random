query GetExpense($id: String!) {
    expenseById(id: $id) {
        id
        amount
        expenseType
        expenseNumber
        cityName
        paySource
        paySourceBank
        status
        doneBy
        task {
            id
            taskNumber
        }
        registeredBy {
            id
            fullName
        }
        observations
        image {
            id
            url
        }
        file {
            id
            url
            mimeType
            filename
        }
        auditor {
            id
            fullName
        }
        installments
        expenseDate
        createdAt
    }
}

query GetExpenses(
    $registeredBy: [String!], 
    $status: [ExpenseStatus!], 
    $expenseType: [ExpenseType!],
    $skip: Int,
    $take: Int
) {
    expenses(
        registeredBy: $registeredBy, 
        status: $status, 
        expenseType: $expenseType,
        skip: $skip,
        take: $take
    ) {
        id
        amount
        expenseType
        paySource
        paySourceBank
        installments
        expenseDate
        observations
        task {
            id
            taskNumber
            businessName
            clientName
            business {
                name
            }
            branch {
                number
                client {
                    name
                }
                city {
                    name
                }
            }
        }
        registeredBy {
            id
            fullName
        }
        doneBy
        status
    }
    expensesCount(
        registeredBy: $registeredBy, 
        status: $status, 
        expenseType: $expenseType
    )
}

mutation DeleteExpense ($id: String!, $taskId: String!) {
    deleteExpense (id: $id, taskId: $taskId) {
        expense{
            id
        }
        success
        message
    }
}

mutation GenerateApprovedExpensesReport($startDate: String!, $endDate: String!, $filters: JSON) {
    generateApprovedExpensesReport(startDate: $startDate, endDate: $endDate, filters: $filters)
}


mutation UpdateExpenseStatus($expenseId: String!, $status: ExpenseStatus!) {
    updateExpenseStatus(expenseId: $expenseId, status: $status) {
        expense {
            id
            amount
            expenseType
            paySource
            paySourceBank
            installments
            task {
                id
                expenses {
                    id
                    status
                }
            }
        }
        success
        message
    }
}